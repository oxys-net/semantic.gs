/////////////////
// Semantic.gs // for Stylus: http://learnboost.github.com/stylus/
/////////////////

// Defaults which you can freely override
columns = 12
column-width = 61
gutter-width = 34
total-width = 100%
min-width = 755

// Utility variable â€” you should never need to modify this
_gridsystem-width = (column-width + gutter-width) * columns

// Set @total-width to 100% for a fluid layout
total-width = _gridsystem-width

// Correcting percentage-to-pixel rounding errors in IE6 & 7
// See http://tylertate.com/blog/2012/01/05/subpixel-rounding.html
// Override @min with the minimum width of your layout

correction = (((0.5 / min-width) * 100) * 1%)

// The micro clearfix http://nicolasgallagher.com/micro-clearfix-hack/
clearfix()
 *zoom:1

  &:before,
  &:after
    content:""
    display:table

  &:after
    clear:both


//////////
// GRID //
//////////

body
  width 100%
  clearfix()

row(columns = columns)
  display block
  width total-width * ((gutter-width + _gridsystem-width ) / _gridsystem-width)
  margin 0 total-width * (((gutter-width * 0.5) / _gridsystem-width ) * - 1)
  *width total-width * ((gutter-width + _gridsystem-width ) / _gridsystem-width)-correction
  *margin 0 total-width * (((gutter-width * 0.5) / _gridsystem-width ) * - 1)-correction

column(x, cols = columns, position = 'inside')
  if position == inside
    display inline
    float left
    overflow hidden
    _gridsystem-width = (column-width + gutter-width) * cols
    width total-width * ((((gutter-width + column-width ) * x) - gutter-width) / _gridsystem-width)
    margin 0 total-width * ( (gutter-width * 0.5) / _gridsystem-width)
    *width total-width * ((((gutter-width + column-width ) * x) - gutter-width) / _gridsystem-width)-correction
    *margin 0 total-width * ( (gutter-width * 0.5) / _gridsystem-width)-correction
  else if position == 'left'
    display inline
    float left
    overflow hidden
    _gridsystem-width = (column-width + gutter-width) * cols
    width total-width * ((((gutter-width + column-width ) * x) - gutter-width / 2) / _gridsystem-width)
    margin 0 total-width * ( (gutter-width * 0.5) / _gridsystem-width) 0 0 
    *width total-width * ((((gutter-width + column-width ) * x) - gutter-width  / 2 ) / _gridsystem-width)-correction
    *margin 0 total-width * ( (gutter-width * 0.5) / _gridsystem-width)-correction 0 0 
  else if position == 'right'
    display inline
    float left
    overflow hidden
    _gridsystem-width = (column-width + gutter-width) * cols
    width total-width * ((((gutter-width + column-width ) * x) - gutter-width / 2) / _gridsystem-width)
    margin 0 0 0 total-width * ( (gutter-width * 0.5) / _gridsystem-width)
    *width total-width * ((((gutter-width + column-width ) * x) - gutter-width  / 2 ) / _gridsystem-width)-correction
    *margin 0 0 0 total-width * ( (gutter-width * 0.5) / _gridsystem-width)-correction 
  else if position == 'full'
    display inline
    float left
    overflow hidden
    _gridsystem-width = (column-width + gutter-width) * cols
    width total-width * ((((gutter-width + column-width ) * x)) / _gridsystem-width)
    margin 0
    *width total-width * ((((gutter-width + column-width ) * x)) / _gridsystem-width)-correction
    *margin 0 
   
column_nogutter(x, cols = columns)
    display inline
    float left
    overflow hidden
    _gridsystem-width = (column-width + gutter-width) * cols
    width total-width * ((((gutter-width + column-width ) * x) - gutter-width) / _gridsystem-width) + 2 * (total-width * ( (gutter-width * 0.5) / _gridsystem-width))
    margin 0 0
    *width total-width * ((((gutter-width + column-width ) * x) - gutter-width) / _gridsystem-width) + 2 * (total-width * ( (gutter-width * 0.5) / _gridsystem-width))
    *margin 0 0


offset(x, cols = columns, position = 'inside')
  _gridsystem-width = (column-width + gutter-width) * cols
  if position == inside
    margin-left total-width * ((((gutter-width + column-width ) * x) - gutter-width) / _gridsystem-width)
  else if position == 'left'
    margin-left total-width * ((((gutter-width + column-width ) * x) - gutter-width / 2 + gutter-width) / _gridsystem-width)
  else if position == 'right'
    margin-left total-width * ((((gutter-width + column-width ) * x) - gutter-width / 2) / _gridsystem-width)
  else if position == 'full'
    margin-left total-width * ((((gutter-width + column-width ) * x)) / _gridsystem-width)
    
